type: edu
files:
- name: main.py
  visible: true
  text: |
    # write your code here
  learner_created: false
- name: test/__init__.py
  visible: false
  learner_created: false
- name: test/data_stage6_test.csv
  visible: false
  learner_created: false
- name: test/data_stage6_train.csv
  visible: false
  learner_created: false
- name: test/tests.py
  visible: false
  text: |+
    from hstest import *


    ANSWER = [0.554, 0.612, 0.857, 0.948]

    # in ANSWER there are lower and upper bounds
    # the correct answer is 0.583, 0.903


    class Eval1Test(StageTest):

        @dynamic_test
        def test(self):
            pr = TestedProgram()
            pr.start()
            if not pr.is_waiting_input():
                raise WrongAnswer("You program should input two paths to the files split by space")
            output = pr.execute("test/data_stage6_train.csv test/data_stage6_test.csv").strip()
            try:
                res = [round(float(x), 3) for x in output.split()]
            except Exception:
                raise WrongAnswer("You should print two float values split with space.")
            if len(res) != 2:
                raise WrongAnswer("Wrong number of values. Print two numbers: true positives and true negatives normalized over the true rows.")
            if not (ANSWER[0] <= res[0] <= ANSWER[1]):
                raise WrongAnswer("Wrong true positives value (the first value).")
            if not (ANSWER[2] <= res[1] <= ANSWER[3]):
                raise WrongAnswer("Wrong true negatives value (the second value).")
            return CheckResult.correct()


    if __name__ == '__main__':
        Eval1Test().run_tests()

  learner_created: false
- name: tests.py
  visible: false
  text: |-
    from test.tests import Eval1Test

    if __name__ == '__main__':    Eval1Test().run_tests()
  learner_created: false
- name: test/data_stage31.csv
  visible: true
  learner_created: true
- name: test/data_stage2.csv
  visible: true
  learner_created: true
- name: Digraph.gv
  visible: true
  text: "digraph {\n\t1353755223184 [label=\"Feature Sex == 0?\"]\n\t1353755225344\
    \ [label=\"Feature Pclass == 2?\"]\n\t1353755280816 [label=\"Feature Parch ==\
    \ 0?\"]\n\t1353755283264 [label=\"Feature SibSp == 0?\"]\n\t1353755282832 [label=\"\
    Prediction: 0\"]\n\t1353755283264 -> 1353755282832 [label=True]\n\t1353755282016\
    \ [label=\"Prediction: 0\"]\n\t1353755283264 -> 1353755282016 [label=False]\n\t\
    1353755280816 -> 1353755283264 [label=True]\n\t1353755281632 [label=\"Prediction:\
    \ 1\"]\n\t1353755280816 -> 1353755281632 [label=False]\n\t1353755225344 -> 1353755280816\
    \ [label=True]\n\t1353755281584 [label=\"Feature Parch == 1?\"]\n\t1353755333056\
    \ [label=\"Feature SibSp == 1?\"]\n\t1353755283408 [label=\"Prediction: 1\"]\n\
    \t1353755333056 -> 1353755283408 [label=True]\n\t1353755335936 [label=\"Feature\
    \ Pclass == 3?\"]\n\t1353755335408 [label=\"Prediction: 0\"]\n\t1353755335936\
    \ -> 1353755335408 [label=True]\n\t1353755335984 [label=\"Prediction: -1\"]\n\t\
    1353755335936 -> 1353755335984 [label=False]\n\t1353755333056 -> 1353755335936\
    \ [label=False]\n\t1353755281584 -> 1353755333056 [label=True]\n\t1353755335264\
    \ [label=\"Feature SibSp == 0?\"]\n\t1353755336416 [label=\"Feature Pclass ==\
    \ 3?\"]\n\t1353755336320 [label=\"Prediction: 0\"]\n\t1353755336416 -> 1353755336320\
    \ [label=True]\n\t1353755336608 [label=\"Prediction: 0\"]\n\t1353755336416 ->\
    \ 1353755336608 [label=False]\n\t1353755335264 -> 1353755336416 [label=True]\n\
    \t1353755334112 [label=\"Prediction: 0\"]\n\t1353755335264 -> 1353755334112 [label=False]\n\
    \t1353755281584 -> 1353755335264 [label=False]\n\t1353755225344 -> 1353755281584\
    \ [label=False]\n\t1353755223184 -> 1353755225344 [label=True]\n\t1353755224240\
    \ [label=\"Feature SibSp == 0?\"]\n\t1353755281824 [label=\"Feature Pclass ==\
    \ 3?\"]\n\t1353755334016 [label=\"Feature Parch == 0?\"]\n\t1353755281680 [label=\"\
    Prediction: 1\"]\n\t1353755334016 -> 1353755281680 [label=True]\n\t1353755335312\
    \ [label=\"Prediction: 1\"]\n\t1353755334016 -> 1353755335312 [label=False]\n\t\
    1353755281824 -> 1353755334016 [label=True]\n\t1353755281920 [label=\"Prediction:\
    \ 1\"]\n\t1353755281824 -> 1353755281920 [label=False]\n\t1353755224240 -> 1353755281824\
    \ [label=True]\n\t1353755282784 [label=\"Feature Pclass == 3?\"]\n\t1353755332768\
    \ [label=\"Feature SibSp == 4?\"]\n\t1353755334304 [label=\"Prediction: 1\"]\n\
    \t1353755332768 -> 1353755334304 [label=True]\n\t1353755366544 [label=\"Feature\
    \ Parch == 5?\"]\n\t1353755366400 [label=\"Prediction: 1\"]\n\t1353755366544 ->\
    \ 1353755366400 [label=True]\n\t1353755368128 [label=\"Feature SibSp == 2?\"]\n\
    \t1353755369088 [label=\"Prediction: 0\"]\n\t1353755368128 -> 1353755369088 [label=True]\n\
    \t1353755408896 [label=\"Feature SibSp == 5?\"]\n\t1353755408752 [label=\"Prediction:\
    \ 0\"]\n\t1353755408896 -> 1353755408752 [label=True]\n\t1353755423984 [label=\"\
    Feature SibSp == 1?\"]\n\t1353755426624 [label=\"Feature Parch == 1?\"]\n\t1353755426000\
    \ [label=\"Prediction: 1\"]\n\t1353755426624 -> 1353755426000 [label=True]\n\t\
    1353755426432 [label=\"Prediction: 0\"]\n\t1353755426624 -> 1353755426432 [label=False]\n\
    \t1353755423984 -> 1353755426624 [label=True]\n\t1353755480320 [label=\"Feature\
    \ Parch == 1?\"]\n\t1353755426768 [label=\"Prediction: 0\"]\n\t1353755480320 ->\
    \ 1353755426768 [label=True]\n\t1353755425520 [label=\"Prediction: 1\"]\n\t1353755480320\
    \ -> 1353755425520 [label=False]\n\t1353755423984 -> 1353755480320 [label=False]\n\
    \t1353755408896 -> 1353755423984 [label=False]\n\t1353755368128 -> 1353755408896\
    \ [label=False]\n\t1353755366544 -> 1353755368128 [label=False]\n\t1353755332768\
    \ -> 1353755366544 [label=False]\n\t1353755282784 -> 1353755332768 [label=True]\n\
    \t1353755336272 [label=\"Feature Pclass == 1?\"]\n\t1353755333344 [label=\"Prediction:\
    \ 1\"]\n\t1353755336272 -> 1353755333344 [label=True]\n\t1353755368704 [label=\"\
    Feature Parch == 0?\"]\n\t1353755368992 [label=\"Prediction: 1\"]\n\t1353755368704\
    \ -> 1353755368992 [label=True]\n\t1353755366736 [label=\"Prediction: 1\"]\n\t\
    1353755368704 -> 1353755366736 [label=False]\n\t1353755336272 -> 1353755368704\
    \ [label=False]\n\t1353755282784 -> 1353755336272 [label=False]\n\t1353755224240\
    \ -> 1353755282784 [label=False]\n\t1353755223184 -> 1353755224240 [label=False]\n\
    }\n"
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/20214#comment
status: Solved
feedback:
  message: Congratulations!
  time: "Sat, 23 Sep 2023 08:48:20 UTC"
record: -1
