type: edu
files:
- name: main.py
  visible: true
  text: |
    # write your code here
  learner_created: false
- name: test/__init__.py
  visible: false
  learner_created: false
- name: test/data_stage9_test.csv
  visible: false
  learner_created: false
- name: test/data_stage9_train.csv
  visible: false
  learner_created: false
- name: test/tests.py
  visible: false
  text: |
    from hstest import *


    ANSWER = [0.554, 0.612, 0.881, 0.973]
    # in ANSWER there are lower and upper bounds
    # the correct answer is 0.583 0.927

    class Eval2Test(StageTest):

        @dynamic_test
        def test(self):
            pr = TestedProgram()
            pr.start()
            if not pr.is_waiting_input():
                raise WrongAnswer("You program should input the path to the files")
            output = pr.execute("test/data_stage9_train.csv test/data_stage9_test.csv").strip()
            try:
                res = [round(float(x), 3) for x in output.split()]
            except Exception:
                raise WrongAnswer("You should print two float values split with space.")
            if len(res) != 2:
                raise WrongAnswer("Wrong number of values. Print two numbers: true positives and true negatives normalized over the true rows.")
            if not (ANSWER[0] <= res[0] <= ANSWER[1]):
                raise WrongAnswer("Wrong true positives value (the first value).")
            if not (ANSWER[2] <= res[1] <= ANSWER[3]):
                raise WrongAnswer("Wrong true negatives value (the second value).")
            return CheckResult.correct()


    if __name__ == '__main__':
        Eval2Test().run_tests()
  learner_created: false
- name: tests.py
  visible: false
  text: |-
    from test.tests import Eval2Test

    if __name__ == '__main__':    Eval2Test().run_tests()
  learner_created: false
- name: test/data_stage31.csv
  visible: true
  learner_created: true
- name: test/data_stage2.csv
  visible: true
  learner_created: true
- name: Digraph.gv
  visible: true
  text: "digraph {\n\t2368741402848 [label=\"Feature Sex == 0?\"]\n\t2368741642544\
    \ [label=\"Feature Age == 0.83?\"]\n\t2368741403904 [label=\"Prediction: 1\"]\n\
    \t2368741642544 -> 2368741403904 [label=True]\n\t2368741644800 [label=\"Feature\
    \ Fare == 9.0?\"]\n\t2368741705088 [label=\"Feature Fare == 7.2292?\"]\n\t2368741705904\
    \ [label=\"Feature Age == 28.0?\"]\n\t2368741707584 [label=\"Feature Age == 22.0?\"\
    ]\n\t2368741707296 [label=\"Prediction: 0\"]\n\t2368741707584 -> 2368741707296\
    \ [label=True]\n\t2368741739248 [label=\"Feature Fare == 7.225?\"]\n\t2368741737712\
    \ [label=\"Prediction: 0\"]\n\t2368741739248 -> 2368741737712 [label=True]\n\t\
    2368741737520 [label=\"Prediction: 1\"]\n\t2368741739248 -> 2368741737520 [label=False]\n\
    \t2368741707584 -> 2368741739248 [label=False]\n\t2368741705904 -> 2368741707584\
    \ [label=True]\n\t2368741706624 [label=\"Prediction: 0\"]\n\t2368741705904 ->\
    \ 2368741706624 [label=False]\n\t2368741705088 -> 2368741705904 [label=True]\n\
    \t2368741704512 [label=\"Prediction: 0\"]\n\t2368741705088 -> 2368741704512 [label=False]\n\
    \t2368741644800 -> 2368741705088 [label=True]\n\t2368741706096 [label=\"Feature\
    \ SibSp == 0?\"]\n\t2368741707536 [label=\"Feature Age == 34.0?\"]\n\t2368741737904\
    \ [label=\"Feature Age == 21.0?\"]\n\t2368741736992 [label=\"Prediction: 0\"]\n\
    \t2368741737904 -> 2368741736992 [label=True]\n\t2368741740064 [label=\"Feature\
    \ Pclass == 3?\"]\n\t2368741739920 [label=\"Prediction: 1\"]\n\t2368741740064\
    \ -> 2368741739920 [label=True]\n\t2368741808448 [label=\"Feature Fare == 10.5?\"\
    ]\n\t2368741807008 [label=\"Prediction: 0\"]\n\t2368741808448 -> 2368741807008\
    \ [label=True]\n\t2368741827392 [label=\"Feature Pclass == 2?\"]\n\t2368741810080\
    \ [label=\"Prediction: 1\"]\n\t2368741827392 -> 2368741810080 [label=True]\n\t\
    2368741829744 [label=\"Feature Fare == 27.7208?\"]\n\t2368741828976 [label=\"\
    Prediction: 0\"]\n\t2368741829744 -> 2368741828976 [label=True]\n\t2368741856736\
    \ [label=\"Feature Fare == 35.5?\"]\n\t2368741856352 [label=\"Prediction: 1\"\
    ]\n\t2368741856736 -> 2368741856352 [label=True]\n\t2368741859184 [label=\"Feature\
    \ Parch == 0?\"]\n\t2368741858320 [label=\"Prediction: 0\"]\n\t2368741859184 ->\
    \ 2368741858320 [label=True]\n\t2368741857360 [label=\"Prediction: 1\"]\n\t2368741859184\
    \ -> 2368741857360 [label=False]\n\t2368741856736 -> 2368741859184 [label=False]\n\
    \t2368741829744 -> 2368741856736 [label=False]\n\t2368741827392 -> 2368741829744\
    \ [label=False]\n\t2368741808448 -> 2368741827392 [label=False]\n\t2368741740064\
    \ -> 2368741808448 [label=False]\n\t2368741737904 -> 2368741740064 [label=False]\n\
    \t2368741707536 -> 2368741737904 [label=True]\n\t2368741707344 [label=\"Prediction:\
    \ 0\"]\n\t2368741707536 -> 2368741707344 [label=False]\n\t2368741706096 -> 2368741707536\
    \ [label=True]\n\t2368741706720 [label=\"Feature Fare == 15.2458?\"]\n\t2368741740016\
    \ [label=\"Feature Parch == 1?\"]\n\t2368741737328 [label=\"Prediction: 1\"]\n\
    \t2368741740016 -> 2368741737328 [label=True]\n\t2368741737472 [label=\"Prediction:\
    \ 0\"]\n\t2368741740016 -> 2368741737472 [label=False]\n\t2368741706720 -> 2368741740016\
    \ [label=True]\n\t2368741706432 [label=\"Prediction: 0\"]\n\t2368741706720 ->\
    \ 2368741706432 [label=False]\n\t2368741706096 -> 2368741706720 [label=False]\n\
    \t2368741644800 -> 2368741706096 [label=False]\n\t2368741642544 -> 2368741644800\
    \ [label=False]\n\t2368741402848 -> 2368741642544 [label=True]\n\t2368741642688\
    \ [label=\"Feature SibSp == 0?\"]\n\t2368741645520 [label=\"Feature Age == 14.0?\"\
    ]\n\t2368741643408 [label=\"Prediction: 0\"]\n\t2368741645520 -> 2368741643408\
    \ [label=True]\n\t2368741642640 [label=\"Prediction: 1\"]\n\t2368741645520 ->\
    \ 2368741642640 [label=False]\n\t2368741642688 -> 2368741645520 [label=True]\n\
    \t2368741645184 [label=\"Feature Fare == 21.075?\"]\n\t2368741707152 [label=\"\
    Feature Fare == 16.7?\"]\n\t2368741707440 [label=\"Feature Age == 33.0?\"]\n\t\
    2368741705952 [label=\"Prediction: 1\"]\n\t2368741707440 -> 2368741705952 [label=True]\n\
    \t2368741706144 [label=\"Prediction: 0\"]\n\t2368741707440 -> 2368741706144 [label=False]\n\
    \t2368741707152 -> 2368741707440 [label=True]\n\t2368741704272 [label=\"Prediction:\
    \ 0\"]\n\t2368741707152 -> 2368741704272 [label=False]\n\t2368741645184 -> 2368741707152\
    \ [label=True]\n\t2368741704368 [label=\"Feature SibSp == 5?\"]\n\t2368741704128\
    \ [label=\"Prediction: 0\"]\n\t2368741704368 -> 2368741704128 [label=True]\n\t\
    2368741703744 [label=\"Prediction: 1\"]\n\t2368741704368 -> 2368741703744 [label=False]\n\
    \t2368741645184 -> 2368741704368 [label=False]\n\t2368741642688 -> 2368741645184\
    \ [label=False]\n\t2368741402848 -> 2368741642688 [label=False]\n}\n"
  learner_created: true
feedback_link: https://hyperskill.org/learn/step/20217#comment
status: Solved
feedback:
  message: Well done! You've finished the project. Select a new project on <a href="https://hyperskill.org/projects">Hyperskill</a>
    to continue learning.
  time: "Sat, 23 Sep 2023 11:36:58 UTC"
record: -1
